// Input: Sensitivity Delta > 0, Privacy parameter ε > 0.
// Output: Z = one sample from Lap_Z(t)
// t = ∆/ε used in the Laplace Mechanism to provide ε-dp
e = 2.7182818284590452353602874713526624977572;

// σ = 4.5; 
// t = (σ div 1) + 1; For discrete Gaussian

Delta = 1;
ε = 0.5;
t = Delta/ε;

B = 1;
U = 0;
V = 0;
i = 0;

while (((B == 1) && (U == 0)) && (V == 0)) && (i < 3):

  D = 0;
  j = 0;
  U = 0;
  while (D == 0) && (j < 10):
    U <- uniform [0,1]; // uniform [0..t-1];
    D <- 1 [e^(-U/t)] 0;
    j++;

  A = 1;
  V = -1;
  while (A == 1) && (V < 5):
    V++;
    A <- 1 [e^(-1)] 0;

  B <- 1 [0.5] 0;
  i++;

Z = (1-(2*B))*(U+(t*V)); // Lap_Z(t) sample


// Create database

N = 5; // Set N to number of participants
k = 0;
Resps = [];
count = 0;
while k < N:
  resp <- uniform [0, 1];
  Resps.append(resp);
  count <- count + resp;
  k++;

noisyCount = count + Z;
leak(noisyCount);
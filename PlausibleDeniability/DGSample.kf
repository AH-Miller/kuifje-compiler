// Input: parameter variance σ^2
// Output: Z = one sample from N_Z(0,σ^2)
// Used in the Gaussian Mechanism to provide (ε,δ)-dp
e = 2.7182818284590452353602874713526624977572;

σ = 2;
t = (σ div 1) + 1;

C = 0;
l = 0;
Z = 0;
B = 1;
U = 0;
V = 0;
i = 0;

while (l < 10):

  B = 1 if (C == 0) else B;
  U = 0 if (C == 0) else U;
  V = 0 if (C == 0) else V;
  i = 0 if (C == 0) else i;

  while (i < 10):
    t1 = 0 if (B == 1) && (U == 0) && (V == 0) else 1;

    // Loop to calculate the probability distribution for U in GenerateU.kf
    // U <- (0 [0.622459] 1) if t1 == 0 else U; // t = 2
    U <- ([ 0.0 @ 0.448441
        , 1.0 @ 0.321322
        , 2.0 @ 0.230237 ]) if t1 == 0 else U; // t = 3

    // Loop to calculate the probability distribution for V in GenerateV.kf
    V <- ([ 0.0 @ 0.632121
        , 1.0 @ 0.232544
        , 2.0 @ 0.085548
        , 3.0 @ 0.031471
        , 4.0 @ 0.011578
        , 5.0 @ 0.004259
        , 6.0 @ 0.001567
        , 7.0 @ 0.000576
        , 8.0 @ 0.000212
        , 9.0 @ 0.000078
        , 10.0@ 0.000046 ]) if t1 == 0 else V;

    B <- (0 [0.5] 1) if t1 == 0 else B;
    i++;

  Z = (1-(2*B))*(U+(t*V)); // Lap_Z(t) sample

  magZ = (-1 * Z) if Z < 0 else Z;

  C <- 1 [e^(-((magZ-((σ^2)/t))^2)/(2*(σ^2)))] 0 if C == 0 else 1;
  l++;

leak(Z);